[{"/Users/jamesboblak/Documents/Bootcamp/Repositories/Tidy/tidy/client/src/index.js":"1","/Users/jamesboblak/Documents/Bootcamp/Repositories/Tidy/tidy/client/src/reportWebVitals.js":"2","/Users/jamesboblak/Documents/Bootcamp/Repositories/Tidy/tidy/client/src/App.js":"3","/Users/jamesboblak/Documents/Bootcamp/Repositories/Tidy/tidy/client/src/styles.js":"4","/Users/jamesboblak/Documents/Bootcamp/Repositories/Tidy/tidy/client/src/App2.js":"5"},{"size":501,"mtime":1630435161892,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1630419481057,"results":"8","hashOfConfig":"7"},{"size":1397,"mtime":1630419481056,"results":"9","hashOfConfig":"7"},{"size":678,"mtime":1630436188372,"results":"10","hashOfConfig":"7"},{"size":6067,"mtime":1630438436501,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u0dzvg",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"/Users/jamesboblak/Documents/Bootcamp/Repositories/Tidy/tidy/client/src/index.js",[],"/Users/jamesboblak/Documents/Bootcamp/Repositories/Tidy/tidy/client/src/reportWebVitals.js",[],["25","26"],"/Users/jamesboblak/Documents/Bootcamp/Repositories/Tidy/tidy/client/src/App.js",["27","28","29","30"],"import logo from './logo.svg';\nimport React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/jamesboblak/Documents/Bootcamp/Repositories/Tidy/tidy/client/src/styles.js",[],"/Users/jamesboblak/Documents/Bootcamp/Repositories/Tidy/tidy/client/src/App2.js",["31"],"import React from \"react\";\n// import CssBaseline from '@material-ui/core/CssBaseline';\nimport {\n  Typography,\n  AppBar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  CssBaseline,\n  Grid,\n  Link,\n  Paper,\n  Toolbar,\n  Container,\n} from \"@material-ui/core\";\n\n// get Tools icon\nimport { Pages } from \"@material-ui/icons\";\n\n// import styles\nimport useStyles from \"./styles\";\n\n// import { spacing } from \"@material-ui/system\";\n\nconst App = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n\n      {/* Header */}\n      <CssBaseline />\n      <AppBar position=\"relative\" backgroundColor=\"alert\">\n        <Toolbar>\n          <Pages className={classes.icon} />\n          <Typography variant=\"h6\">TIDY</Typography>\n\n          {/* Signup button */}\n          <Box mx=\"auto\">\n            <Link\n              component=\"button\"\n              color=\"textSecondary\"\n              variant=\"h5\"\n              onClick={() => {\n                console.info(\"SignUp Request button hit\");\n              }}\n            >\n              SignUp\n            </Link>\n          </Box>\n\n          {/* Login button */}\n          <Box>\n            <Link\n              component=\"button\"\n              color=\"textSecondary\"\n              variant=\"h5\"\n              onClick={() => {\n                console.info(\"LogIn Request button hit\");\n              }}\n            >\n              LogIn\n            </Link>\n          </Box>\n        </Toolbar>\n      </AppBar>\n\n      {/* Body */}\n      <main>\n        <div className={classes.container}>\n          <Container maxwidth=\"sm\">\n            {/* TIDY logo */}\n            <Paper elevation={0} align=\"center\" marginTop=\"50px\">\n              <img src=\"/logo.png\" />\n            </Paper>\n\n            {/* Unused buttons */}\n            {/* <div className={classes.button}>\n              <Grid container spacing={2} justify=\"center\">\n                <Grid item>\n                  <Button variant=\"contained\" color=\"primary\">\n                    See tools\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button variant=\"outlined\" color=\"primary\">\n                    Second\n                  </Button>\n                </Grid>\n              </Grid>\n            </div> */}\n          </Container>\n        </div>\n        <Container classname={classes.cardGrid} maxWidth=\"lg\" align=\"center\">\n          <Grid container spacing={4}>\n\n            {/* WEATHER CARD */}\n            <Grid item>\n              <Card className={classes.card}>\n                <CardMedia\n                  className={classes.cardMedia}\n                  image=\"https://source.unsplash.com/featured/?weather/320x180\"\n                  title=\"image title\"\n                />\n                <CardContent className={classes.cardContent}>\n                  <Typography variant=\"h5\" gutterBottom>\n                    Weather\n                  </Typography>\n                  <Typography>Weather preview</Typography>\n                </CardContent>\n                <CardActions>\n                  <Button size=\"sm\" color=\"primary\">\n                    View\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n\n            {/* CALENDAR CARD */}\n            <Grid item>\n              <Card className={classes.card}>\n                <CardMedia\n                  className={classes.cardMedia}\n                  image=\"https://source.unsplash.com/featured/?calendar/320x180\"\n                  title=\"Calendar\"\n                />\n                <CardContent className={classes.cardContent}>\n                  <Typography variant=\"h5\" gutterBottom>\n                    Calendar\n                  </Typography>\n                  <Typography>Calendar preview</Typography>\n                </CardContent>\n                <CardActions>\n                  <Button size=\"sm\" color=\"primary\">\n                    View\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n\n            {/* TODOS CARD */}\n            <Grid item>\n              <Card className={classes.card}>\n                <CardMedia\n                  className={classes.cardMedia}\n                  image=\"https://source.unsplash.com/featured/?words/320x180\"\n                  title=\"ToDo List\"\n                />\n                <CardContent className={classes.cardContent}>\n                  <Typography variant=\"h5\" gutterBottom>\n                    ToDo's\n                  </Typography>\n                  <Typography>ToDos preview</Typography>\n                </CardContent>\n                <CardActions>\n                  <Button size=\"sm\" color=\"primary\">\n                    View\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n\n            {/* TEAM CARD */}\n            <Grid item>\n              <Card className={classes.card}>\n                <CardMedia\n                  className={classes.cardMedia}\n                  image=\"https://source.unsplash.com/featured/?team/320x180\"\n                  title=\"Team\"\n                />\n                <CardContent className={classes.cardContent}>\n                  <Typography variant=\"h5\" gutterBottom>\n                    Team\n                  </Typography>\n                  <Typography>Team preview</Typography>\n                </CardContent>\n                <CardActions>\n                  <Button size=\"sm\" color=\"primary\">\n                    View\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n          </Grid>\n\n          {/* Welcome message */}\n          <Typography\n              variant=\"h6\"\n              align=\"center\"\n              color=\"textSecondary\"\n              paragraph\n            >\n              Welcome to your Dashboard! Here you can quickly and easily see an\n              overview of each of your tools. Simply click on any of your tools\n              below to drill into it.\n            </Typography>\n        </Container>\n      </main>\n    </>\n  );\n};\n\nexport default App;\n",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":6,"column":3,"nodeType":"38","messageId":"39","endLine":6,"endColumn":17},{"ruleId":"36","severity":1,"message":"40","line":10,"column":27,"nodeType":"38","messageId":"39","endLine":10,"endColumn":33},{"ruleId":"36","severity":1,"message":"41","line":10,"column":35,"nodeType":"38","messageId":"39","endLine":10,"endColumn":40},{"ruleId":"36","severity":1,"message":"42","line":29,"column":7,"nodeType":"38","messageId":"39","endLine":29,"endColumn":13},{"ruleId":"43","severity":1,"message":"44","line":77,"column":15,"nodeType":"45","endLine":77,"endColumn":38},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'ApolloProvider' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Route' is defined but never used.","'client' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]
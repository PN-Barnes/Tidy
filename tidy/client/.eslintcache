[{"/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/index.js":"1","/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/reportWebVitals.js":"2","/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/App2.js":"3","/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/styles.js":"4","/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/App.js":"5","/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/pages/Home.js":"6","/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/pages/SignIn.js":"7","/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/pages/tasks.js":"8","/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/pages/todos.js":"9","/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/pages/weather.js":"10","/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/utils/GlobalState.js":"11","/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/components/Nav/index.js":"12","/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/utils/reducers.js":"13","/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/utils/auth.js":"14","/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/utils/actions.js":"15","/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/pages/Signup.js":"16","/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/utils/mutations.js":"17"},{"size":501,"mtime":1630611450690,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1630403671223,"results":"20","hashOfConfig":"19"},{"size":10764,"mtime":1630612136478,"results":"21","hashOfConfig":"19"},{"size":678,"mtime":1630602725673,"results":"22","hashOfConfig":"19"},{"size":1488,"mtime":1630602725639,"results":"23","hashOfConfig":"19"},{"size":218,"mtime":1630611563717,"results":"24","hashOfConfig":"19"},{"size":3210,"mtime":1630607534766,"results":"25","hashOfConfig":"19"},{"size":268,"mtime":1630607534772,"results":"26","hashOfConfig":"19"},{"size":269,"mtime":1630602725666,"results":"27","hashOfConfig":"19"},{"size":274,"mtime":1630602725667,"results":"28","hashOfConfig":"19"},{"size":514,"mtime":1630602725679,"results":"29","hashOfConfig":"19"},{"size":1136,"mtime":1630602725648,"results":"30","hashOfConfig":"19"},{"size":644,"mtime":1630602725725,"results":"31","hashOfConfig":"19"},{"size":1015,"mtime":1630602725702,"results":"32","hashOfConfig":"19"},{"size":292,"mtime":1630611817075,"results":"33","hashOfConfig":"19"},{"size":4934,"mtime":1630611982186,"results":"34","hashOfConfig":"19"},{"size":2771,"mtime":1630612379913,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"4uudmo",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/index.js",[],["75","76"],"/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/reportWebVitals.js",[],"/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/App2.js",["77","78","79","80","81","82","83","84","85","86","87","88","89","90","91"],"/* eslint-disable jsx-a11y/alt-text */\nimport React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n// import CssBaseline from '@material-ui/core/CssBaseline';\nimport {\n  Typography,\n  AppBar,\n  Box,\n  // Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  CssBaseline,\n  Grid,\n  Link,\n  Paper,\n  Toolbar,\n  Container,\n} from '@material-ui/core';\n\n// get Tools icon\nimport { Pages } from '@material-ui/icons';\n\n// import styles\nimport useStyles from './styles';\n\n// import { spacing } from \"@material-ui/system\";\n\nimport Home from './pages/Home';\nimport SignIn from './pages/SignIn';\nimport SignUp from './pages/Signup';\nimport Tasks from './pages/tasks';\nimport ToDo from './pages/todos';\nimport Weather from './pages/weather';\nimport Nav from './components/Nav';\nimport { AccountProvider } from './utils/GlobalState';\n\n// const App = () => {\n//   const classes = useStyles();\n\n//   return (\n//     <>\n//       {/* Header */}\n//       <CssBaseline />\n//       <AppBar position=\"relative\" backgroundColor=\"alert\">\n//         <Toolbar>\n//           <Pages className={classes.icon} />\n//           <Typography variant=\"h6\">TIDY</Typography>\n\n//           {/* Signup button */}\n//           <Box mx=\"auto\">\n//             <Link\n//               component=\"button\"\n//               color=\"textSecondary\"\n//               variant=\"h5\"\n//               onClick={() => {\n//                 console.info('SignUp Request button hit');\n//               }}\n//             >\n//               SignUp\n//             </Link>\n//           </Box>\n\n//           {/* Login button */}\n//           <Box>\n//             <Link\n//               component=\"button\"\n//               color=\"textSecondary\"\n//               variant=\"h5\"\n//               onClick={() => {\n//                 console.info('LogIn Request button hit');\n//               }}\n//             >\n//               LogIn\n//             </Link>\n//           </Box>\n//         </Toolbar>\n//       </AppBar>\n\n//       {/* Body */}\n//       <main>\n//         <div className={classes.container}>\n//           <Container maxwidth=\"sm\">\n//             {/* TIDY logo */}\n//             <Paper elevation={0} align=\"center\" marginTop=\"50px\">\n//               <img src=\"/logo.png\" />\n//             </Paper>\n\n//             {/* Unused buttons */}\n//             {/* <div className={classes.button}>\n//               <Grid container spacing={2} justify=\"center\">\n//                 <Grid item>\n//                   <Button variant=\"contained\" color=\"primary\">\n//                     See tools\n//                   </Button>\n//                 </Grid>\n//                 <Grid item>\n//                   <Button variant=\"outlined\" color=\"primary\">\n//                     Second\n//                   </Button>\n//                 </Grid>\n//               </Grid>\n//             </div> */}\n//           </Container>\n//         </div>\n//         <Container classname={classes.cardGrid} maxWidth=\"lg\" align=\"center\">\n//           <Grid container spacing={4}>\n//             {/* WEATHER CARD */}\n//             <Grid item>\n//               <Card className={classes.card}>\n//                 <CardMedia\n//                   className={classes.cardMedia}\n//                   image=\"https://source.unsplash.com/featured/?weather/320x180\"\n//                   title=\"image title\"\n//                 />\n//                 <CardContent className={classes.cardContent}>\n//                   <Typography variant=\"h5\" gutterBottom>\n//                     Weather\n//                   </Typography>\n//                   <Typography>Weather preview</Typography>\n//                 </CardContent>\n//                 <CardActions>\n//                   <Button size=\"sm\" color=\"primary\">\n//                     View\n//                   </Button>\n//                 </CardActions>\n//               </Card>\n//             </Grid>\n\n//             {/* CALENDAR CARD */}\n//             <Grid item>\n//               <Card className={classes.card}>\n//                 <CardMedia\n//                   className={classes.cardMedia}\n//                   image=\"https://source.unsplash.com/featured/?calendar/320x180\"\n//                   title=\"Calendar\"\n//                 />\n//                 <CardContent className={classes.cardContent}>\n//                   <Typography variant=\"h5\" gutterBottom>\n//                     Calendar\n//                   </Typography>\n//                   <Typography>Calendar preview</Typography>\n//                 </CardContent>\n//                 <CardActions>\n//                   <Button size=\"sm\" color=\"primary\">\n//                     View\n//                   </Button>\n//                 </CardActions>\n//               </Card>\n//             </Grid>\n\n//             {/* TODOS CARD */}\n//             <Grid item>\n//               <Card className={classes.card}>\n//                 <CardMedia\n//                   className={classes.cardMedia}\n//                   image=\"https://source.unsplash.com/featured/?words/320x180\"\n//                   title=\"ToDo List\"\n//                 />\n//                 <CardContent className={classes.cardContent}>\n//                   <Typography variant=\"h5\" gutterBottom>\n//                     ToDo's\n//                   </Typography>\n//                   <Typography>ToDos preview</Typography>\n//                 </CardContent>\n//                 <CardActions>\n//                   <Button size=\"sm\" color=\"primary\">\n//                     View\n//                   </Button>\n//                 </CardActions>\n//               </Card>\n//             </Grid>\n\n//             {/* TEAM CARD */}\n//             <Grid item>\n//               <Card className={classes.card}>\n//                 <CardMedia\n//                   className={classes.cardMedia}\n//                   image=\"https://source.unsplash.com/featured/?team/320x180\"\n//                   title=\"Team\"\n//                 />\n//                 <CardContent className={classes.cardContent}>\n//                   <Typography variant=\"h5\" gutterBottom>\n//                     Team\n//                   </Typography>\n//                   <Typography>Team preview</Typography>\n//                 </CardContent>\n//                 <CardActions>\n//                   <Button size=\"sm\" color=\"primary\">\n//                     View\n//                   </Button>\n//                 </CardActions>\n//               </Card>\n//             </Grid>\n//           </Grid>\n\n//           {/* Welcome message */}\n//           <Typography\n//             variant=\"h6\"\n//             align=\"center\"\n//             color=\"textSecondary\"\n//             paragraph\n//           >\n//             Welcome to your Dashboard! Here you can quickly and easily see an\n//             overview of each of your tools. Simply click on any of your tools\n//             below to drill into it.\n//           </Typography>\n//         </Container>\n//       </main>\n//     </>\n//   );\n// };\n\n// ROUTER\n// import { createBrowserHistory } from \"history\";\n// import { Router, Route, Switch } from \"react-router-dom\";\n\n// import \"assets/scss/material-kit-react.scss?v=1.10.0\";\n\n// // pages for this product\n// import Calendar from \"pages/calendar.js\";\n// import Contacts from \"pages/contacts.js\";\n// import Events from \"pages/events.js\";\n// import Home from \"pages/Home.js\";\n// import Landing from \"pages/landing.js\";\n// import Photos from \"pages/photos.js\";\n// import Profile from \"pages/profile.js\";\n// import SignIn from \"pages/Login.js/\";\n// import SignUp from \"pages/Signup.js\";\n// import Tasks from \"pages/tasks.js\";\n// import Team from \"pages/team.js\";\n// import Todos from \"pages/todos.js\";\n// import Weather from \"pages/weather.js\";\n\n// var hist = createBrowserHistory();\n\n// ReactDOM.render(\n//   <Router history={hist}>\n//     <Switch>\n//       <Route path=\"/pages/calendar\" component={pages} />\n//       <Route path=\"/pages/contacts\" component={contacts} />\n//       <Route path=\"/pages/events\" component={events} />\n//       <Route path=\"/pages/home\" component={Home} />\n//       <Route path=\"/pages/landing\" component={landing} />\n//       <Route path=\"/pages/photos\" component={photos} />\n//       <Route path=\"/pages/profile\" component={profile} />\n//       <Route path=\"/pages/SignIn\" component={SignIn} />\n//       <Route path=\"/pages/Signup\" component={SignUp} />\n//       <Route path=\"/pages/tasks\" component={tasks} />\n//       <Route path=\"/pages/team\" component={team} />\n//       <Route path=\"/pages/todos\" component={todos} />\n//       <Route path=\"/\" component={home} />\n//     </Switch>\n//   </Router>,\n//   document.getElementById(\"root\")\n// );\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <AccountProvider>\n            <Nav />\n            <Switch>\n              <Route\n                exact\n                path='/tidy/client/src/pages/Home.js'\n                component={Home}\n              />\n              <Route\n                exact\n                path='/tidy/client/src/pages/SignIn.js'\n                component={SignIn}\n              />\n              <Route\n                exact\n                path='/tidy/client/src/pages/Signup.js'\n                component={SignUp}\n              />\n              <Route\n                exact\n                path='/tidy/client/src/pages/tasks.js'\n                component={Tasks}\n              />\n              <Route\n                exact\n                path='/tidy/client/src/pages/todos.js'\n                component={ToDo}\n              />\n              <Route\n                exact\n                path='/tidy/client/src/pages/weather.js'\n                component={Weather}\n              />\n              <Route />\n            </Switch>\n          </AccountProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n\n/* <Header>\n  <SignupButton>props\n  </SignupButton>\n  <LoginButton>\n\n  </LoginButton>\n</Header> */\n","/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/styles.js",[],"/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/App.js",["92","93"],"import logo from './logo.svg';\nimport React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n",["94","95"],"/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/pages/Home.js",[],"/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/pages/SignIn.js",[],"/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/pages/tasks.js",[],"/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/pages/todos.js",[],"/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/pages/weather.js",[],"/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/utils/GlobalState.js",[],"/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/components/Nav/index.js",[],"/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/utils/reducers.js",[],"/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/utils/auth.js",[],"/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/utils/actions.js",[],"/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/pages/Signup.js",["96","97"],"import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Copyright() {\n  return (\n    <Typography variant='body2' color='textSecondary' align='center'>\n      {'Copyright © '}\n      <Link color='inherit' href='https://material-ui.com/'>\n        Tidy\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <Container component='main' maxWidth='xs'>\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component='h1' variant='h5'>\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleFormSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete='fname'\n                name='firstName'\n                variant='outlined'\n                required\n                fullWidth\n                id='firstName'\n                label='First Name'\n                autoFocus\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant='outlined'\n                required\n                fullWidth\n                id='lastName'\n                label='Last Name'\n                name='lastName'\n                autoComplete='lname'\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant='outlined'\n                required\n                fullWidth\n                id='email'\n                label='Email Address'\n                name='email'\n                autoComplete='email'\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant='outlined'\n                required\n                fullWidth\n                name='password'\n                label='Password'\n                type='password'\n                id='password'\n                autoComplete='current-password'\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value='allowExtraEmails' color='primary' />}\n                label='I want to receive inspiration, marketing promotions and updates via email.'\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type='submit'\n            fullWidth\n            variant='contained'\n            color='primary'\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justifyContent='flex-end'>\n            <Grid item>\n              <Link href='#' variant='body2'>\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","/Users/hugh/Documents/College/Berkeley Boot Camp/Project 3/Tidy/tidy/client/src/utils/mutations.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":14,"column":3,"nodeType":"104","messageId":"105","endLine":14,"endColumn":13},{"ruleId":"102","severity":1,"message":"106","line":15,"column":3,"nodeType":"104","messageId":"105","endLine":15,"endColumn":9},{"ruleId":"102","severity":1,"message":"107","line":16,"column":3,"nodeType":"104","messageId":"105","endLine":16,"endColumn":6},{"ruleId":"102","severity":1,"message":"108","line":18,"column":3,"nodeType":"104","messageId":"105","endLine":18,"endColumn":7},{"ruleId":"102","severity":1,"message":"109","line":19,"column":3,"nodeType":"104","messageId":"105","endLine":19,"endColumn":14},{"ruleId":"102","severity":1,"message":"110","line":20,"column":3,"nodeType":"104","messageId":"105","endLine":20,"endColumn":14},{"ruleId":"102","severity":1,"message":"111","line":21,"column":3,"nodeType":"104","messageId":"105","endLine":21,"endColumn":12},{"ruleId":"102","severity":1,"message":"112","line":22,"column":3,"nodeType":"104","messageId":"105","endLine":22,"endColumn":14},{"ruleId":"102","severity":1,"message":"113","line":23,"column":3,"nodeType":"104","messageId":"105","endLine":23,"endColumn":7},{"ruleId":"102","severity":1,"message":"114","line":24,"column":3,"nodeType":"104","messageId":"105","endLine":24,"endColumn":7},{"ruleId":"102","severity":1,"message":"115","line":25,"column":3,"nodeType":"104","messageId":"105","endLine":25,"endColumn":8},{"ruleId":"102","severity":1,"message":"116","line":26,"column":3,"nodeType":"104","messageId":"105","endLine":26,"endColumn":10},{"ruleId":"102","severity":1,"message":"117","line":27,"column":3,"nodeType":"104","messageId":"105","endLine":27,"endColumn":12},{"ruleId":"102","severity":1,"message":"118","line":31,"column":10,"nodeType":"104","messageId":"105","endLine":31,"endColumn":15},{"ruleId":"102","severity":1,"message":"119","line":34,"column":8,"nodeType":"104","messageId":"105","endLine":34,"endColumn":17},{"ruleId":"102","severity":1,"message":"120","line":10,"column":27,"nodeType":"104","messageId":"105","endLine":10,"endColumn":33},{"ruleId":"102","severity":1,"message":"121","line":10,"column":35,"nodeType":"104","messageId":"105","endLine":10,"endColumn":40},{"ruleId":"98","replacedBy":"122"},{"ruleId":"100","replacedBy":"123"},{"ruleId":"102","severity":1,"message":"124","line":56,"column":21,"nodeType":"104","messageId":"105","endLine":56,"endColumn":26},{"ruleId":"102","severity":1,"message":"125","line":56,"column":28,"nodeType":"104","messageId":"105","endLine":56,"endColumn":32},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'AppBar' is defined but never used.","'Box' is defined but never used.","'Card' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'CssBaseline' is defined but never used.","'Grid' is defined but never used.","'Link' is defined but never used.","'Paper' is defined but never used.","'Toolbar' is defined but never used.","'Container' is defined but never used.","'Pages' is defined but never used.","'useStyles' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.",["126"],["127"],"'error' is assigned a value but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]